{
  "variable": [
    {
      "region": {}
    },
    {
      "account": {}
    },
    {
      "azs": {
        "default": {
          "value": {
            "us-west-1": {
              "value": "us-west-1c,us-west-1b"
            },
            "us-west-2": {
              "value": "us-west-2c,us-west-2b,us-west-2a"
            },
            "us-east-1": {
              "value": "us-east-1c,us-east-1b,us-east-1a"
            },
            "eu-central-1": {
              "value": "eu-central-1a,eu-central-1b,eu-central-1c"
            },
            "sa-east-1": {
              "value": "sa-east-1a,sa-east-1c"
            },
            "ap-northeast-1": {
              "value": "ap-northeast-1a,ap-northeast-1c,ap-northeast-1d"
            },
            "ap-southeast-1": {
              "value": "ap-southeast-1a,ap-southeast-1b,ap-southeast-1c"
            },
            "ap-southeast-2": {
              "value": "ap-southeast-2a,ap-southeast-2b,ap-southeast-2c"
            }
          }
        }
      }
    },
    {
      "options": {
        "type": {
          "value": "${string}"
        },
        "default": {
          "value": {}
        }
      }
    },
    {
      "var_with_validation": {
        "type": {
          "value": "${list(object({'id': '${string}', 'nested': \"${list(object({'id': '${string}', 'type': '${string}'}))}\"}))}"
        },
        "validation": [
          {
            "condition": {
              "value": "${!contains([for v in flatten(var.var_with_validation[*].id) : can(regex(\"^(A|B)$\", v))], False)}"
            },
            "error_message": {
              "value": "The property `id` must be one of value [A, B]."
            }
          },
          {
            "condition": {
              "value": "${!contains([for v in flatten(var.var_with_validation[*].nested[*].type) : can(regex(\"^(A|B)$\", v))], False)}"
            },
            "error_message": {
              "value": "The property `nested.type` must be one of value [A, B]."
            }
          }
        ]
      }
    }
  ],
  "locals": [
    {
      "foo": {
        "value": "${var.account}_bar"
      },
      "bar": {
        "value": {
          "baz": {
            "value": 1
          }
        }
      }
    },
    {
      "route53_forwarding_rule_shares": {
        "value": "${{for forwarding_rule_key in keys(var.route53_resolver_forwarding_rule_shares) : \"${forwarding_rule_key}\" => {'aws_account_ids': {'value': '${[for account_name in var.route53_resolver_forwarding_rule_shares[forwarding_rule_key].aws_account_names : module.remote_state_subaccounts.map[account_name].outputs[\"aws_account_id\"]]}'}}}}"
      },
      "has_valid_forwarding_rules_template_inputs": {
        "value": "${length(keys(var.forwarding_rules_template.copy_resolver_rules)) > 0 && length(var.forwarding_rules_template.replace_with_target_ips) > 0 && length(var.forwarding_rules_template.exclude_cidrs) > 0}"
      },
      "for_whitespace": {
        "value": "${{for i in [1, 2, 3] : i => i}}"
      }
    },
    {
      "nested_data": {
        "value": [
          {
            "id": {
              "value": 1
            },
            "nested": {
              "value": [
                {
                  "id": {
                    "value": "a"
                  },
                  "again": {
                    "value": [
                      {
                        "id": {
                          "value": "a1"
                        }
                      },
                      {
                        "id": {
                          "value": "b1"
                        }
                      }
                    ]
                  }
                },
                {
                  "id": {
                    "value": "c"
                  }
                }
              ]
            }
          },
          {
            "id": {
              "value": 1
            },
            "nested": {
              "value": [
                {
                  "id": {
                    "value": "a"
                  },
                  "again": {
                    "value": [
                      {
                        "id": {
                          "value": "a2"
                        }
                      },
                      {
                        "id": {
                          "value": "b2"
                        }
                      }
                    ]
                  }
                },
                {
                  "id": {
                    "value": "b"
                  },
                  "again": {
                    "value": [
                      {
                        "id": {
                          "value": "a"
                        }
                      },
                      {
                        "id": {
                          "value": "b"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      },
      "ids_level_1": {
        "value": "${distinct(local.nested_data[*].id)}"
      },
      "ids_level_2": {
        "value": "${flatten(local.nested_data[*].nested[*].id)}"
      },
      "ids_level_3": {
        "value": "${flatten(local.nested_data[*].nested[*].again[*][0].foo.bar[0])}"
      },
      "bindings_by_role": {
        "value": "${distinct(flatten([for name in local.real_entities : [for role , members in var.bindings : {'name': {'value': '${name}'}, 'role': {'value': '${role}'}, 'members': {'value': '${members}'}}]]))}"
      }
    }
  ]
}